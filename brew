#!/bin/bash
#
# Fully automated LAMP installation and configuration using Trusted localhost
# SSL Certificates
#
# Copyright: Copyright 2018-2020 Justin Hartman (https://justinhartman.co)
# Author   : Justin Hartman <code@justinhartman.co> (https://justinhartman.co)
# License  : https://opensource.org/licenses/AGPL-3.0 AGPL-3.0
# Version  : 1.2.2
# Link     : https://github.com/justinhartman/lamp-ssl
# Since    : 0.5.0
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#

#######################################
# Includes the colour palette and
# other global variables
# Globals:
#   None
# Arguments:
#   None
# Returns:
#   Variables
#######################################
global_includes() {
    source ./scripts/globals.sh
    source ./scripts/colour_palette.sh
}

#######################################
# This asks the user if they have
# Homebrew or not and waits for a Y or
# N answer.
# Globals:
#   None
# Arguments:
#   None
# Returns:
#   Void
#######################################
brew_start() {
    printf "${BLU}%s\\n" "${TOP}"
    printf '* %-76s %s\n' "Do you want to install Homebrew on your computer? (Y/n)" "*"
    printf "%s${NOC}\\n\\n" "${BOTTOM}"
    echo -n ""
    read -r answer
}

#######################################
# This installs Homebrew (`brew`) but
# only if the user hasn't got it and
# wants to install it via the script.
# Globals:
#   None
# Arguments:
#   None
# Returns:
#   Void
#######################################
brew_install() {
    printf "${LGY}%s\\n" "${TOP}"
    printf '* %-76s %s\n' "Installing Homebrew..." "*"
    printf "%s${NOC}\\n\\n" "${BOTTOM}"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    echo -e "\\n${GRN}\\xE2\\x9C\\x94${NOC} ${CYA}Successfully installed Homebrew.${NOC}\\n"
}

#######################################
# Installs the packages required from
# `brew` running `brew install`.
# Globals:
#   None
# Arguments:
#   None
# Returns:
#   Void
#######################################
brew_packages() {
    printf "${GRY}%s\\n" "${TOP}"
    printf '* %-76s %s\n' "Installing Apache 2, MySQL and PHP..." "*"
    printf "%s${NOC}\\n\\n" "${BOTTOM}"
    brew install wget httpd mysql php
    echo -e "\\n${GRN}\\xE2\\x9C\\x94${NOC} ${CYA}Successfully installed Apache 2, MySQL and PHP.${NOC}\\n"
}

#######################################
# Starts up background processes which
# run at boot time.
# Globals:
#   None
# Arguments:
#   None
# Returns:
#   Void
#######################################
brew_startup() {
    printf "${ORG}%s\\n" "${TOP}"
    printf '* %-76s %s\n' "Starting Apache 2, MySQL and PHP..." "*"
    printf "%s${NOC}\\n\\n" "${BOTTOM}"
    sudo /usr/sbin/apachectl stop
    sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist
    brew services start httpd
    brew services start mysql
    brew services start php
    echo -e "\\n${GRN}\\xE2\\x9C\\x94${NOC} ${CYA}Successfully started Apache 2, MySQL and PHP.${NOC}\\n"
}

global_includes
brew_start

if [ "$answer" != "${answer#[Yy]}" ]; then
    brew_install
    brew_packages
    brew_startup
else
    printf "${RED}%s\\n" "${TOP}"
    printf '* %-76s %s\n' "OK, not installing Homebrew. Proceeding with the installation of the" "*"
    printf '* %-76s %s\n' "PHP, MySQL and Apache 2 packages from Homebrew." "*"
    printf "%s${NOC}\\n\\n" "${BOTTOM}"
    brew_packages
    brew_startup
fi

exit 0
