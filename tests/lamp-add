#!/bin/bash
#
# Add new domains to your setup. This creates the website folder, link to the
# /etc/hosts file, creates a SSL certificate and sets up a git project for you
# to begin using.
#
# Copyright: Copyright (C) 2018 Justin Hartman (https://justinhartman.co)
# Author   : Justin Hartman <code@justinhartman.co> (https://justinhartman.co)
# License  : https://opensource.org/licenses/AGPL-3.0 AGPL-3.0
# Version  : 1.1.0
# Link     : https://github.com/justinhartman/lamp-ssl
# Link     : https://justinhartman.co
# Since    : 0.5.0
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#

#######################################
# Includes the colour palette and
# other global variables
# Globals:
#   None
# Arguments:
#   None
# Returns:
#   Variables
#######################################
global_includes ()
{
    source ./test_suite.sh
    source scripts/colour_palette.sh
}

#######################################
# This is the main application thread.
# Globals:
#   None
# Arguments:
#   None
# Returns:
#   String Multi-interactive messages.
#######################################
main_application ()
{
    # source $scripts/enter_domain.sh # Get domain name to be added
    domain="test.localhost"
    source $scripts/openssl_config.sh # Add domain to 'openssl.conf' configuration file
    source $scripts/openssl_command.sh # Create SSL Certificates for the new domain
    source $scripts/keychain_certificate.sh # Adding new SSL cert to macOS' Keychain
    source $scripts/hosts_domain.sh # Add new domain to hosts file
    source $scripts/folder_and_git.sh # Add website folder and initialise git repo
    source $scripts/git_setup.sh # git initial structure, files and check-in
    source $scripts/website_folder_ownership.sh # Setting correct folder ownership
    source $scripts/restart_apache.sh # Restart Apache 2

    printf "${GRN}%s\\n" "$TOP"
    printf "* %-76s %s\\n" "Congratulations! Your domain has been added and you can begin using it" "*"
    printf "* %-76s %s\\n" "immediately. You will find your website in the following folder:" "*"
    printf "* %-76s %s\\n" "'${dist}/websites/${domain}'" "*"
    printf "* %-76s %s\\n" "You can edit all your files in this location. You can access your website" "*"
    printf "* %-76s %s\\n" " by going to https://${domain} in your web browser." "*"
    printf "%s${NOC}\\n\\n" "$BOTTOM"
}

global_includes # Includes global variables and file paths.

#if ! [ "$(id -u)" = 0 ]; then
#    printf "${RED}%s\\n" "$TOP"
#    printf "* %-76s %s\\n" "This needs to be run as root. Please run it again using 'sudo' by executing" "*"
#    printf "* %-76s %s\\n" "the following command: $ sudo ./add_domain" "*"
#    printf "%s${NOC}\\n\\n" "$BOTTOM"
#
#    exit 1
#fi

main_application # Runs the main install
exit 0
